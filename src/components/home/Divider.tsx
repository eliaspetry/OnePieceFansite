import * as styles from './../../styles/home/clip-path-divider.module.sass';
import rawDividerImage from '../../../public/img/rope-divider.jpg?as=webp';
import { LazyLoadImage } from 'react-lazy-load-image-component';

// We are only using a rough, improvised clip-path cutout here to comply with the assignment, since the requirements state that it should showcase at least one use case
// This image would normally be inserted with an already transparent background as PNG

const Divider: React.FC = () => (
    <>
        <svg width="0" height="0">
            <clipPath
                id={styles['divider-clip-path']}
                clipPathUnits="objectBoundingBox"
            >
                <polygon points="1.000 0.634, 0.996 0.675, 0.990 0.683, 0.984 0.691, 0.976 0.699, 0.971 0.691, 0.965 0.667, 0.959 0.683, 0.952 0.699, 0.946 0.699, 0.940 0.691, 0.935 0.659, 0.930 0.683, 0.925 0.691, 0.919 0.699, 0.914 0.699, 0.908 0.683, 0.903 0.659, 0.898 0.683, 0.892 0.691, 0.887 0.691, 0.881 0.691, 0.875 0.667, 0.870 0.675, 0.863 0.691, 0.857 0.691, 0.851 0.691, 0.845 0.691, 0.841 0.667, 0.835 0.683, 0.829 0.699, 0.822 0.699, 0.818 0.699, 0.813 0.683, 0.810 0.659, 0.804 0.675, 0.797 0.691, 0.790 0.699, 0.784 0.683, 0.778 0.667, 0.772 0.683, 0.762 0.699, 0.755 0.691, 0.748 0.675, 0.744 0.659, 0.741 0.683, 0.735 0.691, 0.730 0.699, 0.726 0.691, 0.722 0.691, 0.718 0.675, 0.714 0.659, 0.711 0.683, 0.706 0.691, 0.698 0.691, 0.693 0.691, 0.688 0.683, 0.682 0.650, 0.678 0.675, 0.670 0.699, 0.665 0.691, 0.660 0.691, 0.654 0.667, 0.648 0.675, 0.641 0.691, 0.635 0.699, 0.628 0.683, 0.621 0.667, 0.614 0.683, 0.609 0.691, 0.603 0.691, 0.597 0.707, 0.590 0.683, 0.587 0.667, 0.582 0.683, 0.576 0.699, 0.568 0.699, 0.562 0.699, 0.558 0.667, 0.552 0.683, 0.546 0.699, 0.539 0.699, 0.532 0.691, 0.526 0.659, 0.521 0.675, 0.516 0.683, 0.510 0.699, 0.503 0.691, 0.495 0.659, 0.489 0.675, 0.483 0.691, 0.476 0.699, 0.471 0.683, 0.464 0.667, 0.458 0.683, 0.452 0.691, 0.445 0.691, 0.439 0.691, 0.432 0.667, 0.425 0.683, 0.418 0.699, 0.412 0.707, 0.404 0.683, 0.399 0.667, 0.393 0.691, 0.386 0.699, 0.381 0.691, 0.375 0.691, 0.370 0.667, 0.363 0.683, 0.356 0.691, 0.349 0.691, 0.344 0.691, 0.337 0.659, 0.332 0.683, 0.325 0.699, 0.319 0.691, 0.312 0.683, 0.305 0.667, 0.298 0.691, 0.292 0.691, 0.286 0.691, 0.279 0.691, 0.274 0.659, 0.268 0.683, 0.262 0.691, 0.254 0.691, 0.250 0.691, 0.244 0.659, 0.240 0.667, 0.233 0.683, 0.226 0.699, 0.220 0.699, 0.213 0.675, 0.209 0.667, 0.205 0.683, 0.197 0.691, 0.190 0.683, 0.184 0.683, 0.179 0.650, 0.175 0.667, 0.169 0.683, 0.162 0.691, 0.157 0.691, 0.150 0.667, 0.143 0.683, 0.136 0.691, 0.130 0.691, 0.125 0.691, 0.121 0.683, 0.116 0.650, 0.111 0.683, 0.105 0.691, 0.098 0.683, 0.092 0.683, 0.086 0.650, 0.081 0.675, 0.074 0.683, 0.068 0.691, 0.062 0.683, 0.054 0.667, 0.048 0.675, 0.042 0.699, 0.035 0.683, 0.030 0.683, 0.023 0.650, 0.019 0.675, 0.013 0.691, 0.004 0.691, 0.000 0.683, 0.000 0.374, 0.007 0.333, 0.015 0.317, 0.022 0.317, 0.027 0.325, 0.032 0.341, 0.035 0.358, 0.041 0.333, 0.047 0.325, 0.053 0.309, 0.059 0.317, 0.067 0.350, 0.071 0.325, 0.079 0.309, 0.087 0.317, 0.092 0.317, 0.098 0.350, 0.108 0.309, 0.115 0.317, 0.124 0.317, 0.130 0.350, 0.135 0.341, 0.140 0.309, 0.145 0.309, 0.153 0.317, 0.159 0.341, 0.165 0.341, 0.168 0.317, 0.177 0.317, 0.184 0.317, 0.190 0.333, 0.193 0.350, 0.197 0.333, 0.202 0.317, 0.206 0.317, 0.213 0.317, 0.217 0.317, 0.224 0.341, 0.229 0.325, 0.234 0.317, 0.239 0.317, 0.245 0.325, 0.251 0.333, 0.255 0.350, 0.261 0.317, 0.268 0.317, 0.274 0.309, 0.280 0.317, 0.288 0.350, 0.294 0.325, 0.300 0.309, 0.309 0.317, 0.314 0.325, 0.319 0.350, 0.324 0.325, 0.332 0.317, 0.337 0.309, 0.343 0.325, 0.349 0.350, 0.356 0.325, 0.362 0.309, 0.370 0.317, 0.377 0.325, 0.381 0.350, 0.387 0.333, 0.394 0.317, 0.401 0.317, 0.406 0.325, 0.413 0.350, 0.418 0.325, 0.424 0.325, 0.432 0.325, 0.437 0.325, 0.444 0.341, 0.450 0.325, 0.457 0.325, 0.463 0.317, 0.469 0.325, 0.473 0.341, 0.476 0.350, 0.483 0.325, 0.489 0.317, 0.498 0.317, 0.503 0.325, 0.508 0.341, 0.516 0.317, 0.523 0.317, 0.530 0.317, 0.535 0.333, 0.539 0.358, 0.543 0.341, 0.549 0.317, 0.556 0.317, 0.563 0.317, 0.569 0.350, 0.576 0.325, 0.581 0.317, 0.587 0.317, 0.594 0.317, 0.601 0.350, 0.606 0.325, 0.613 0.325, 0.618 0.317, 0.623 0.317, 0.629 0.333, 0.633 0.350, 0.639 0.325, 0.645 0.309, 0.651 0.309, 0.656 0.317, 0.662 0.341, 0.665 0.358, 0.671 0.325, 0.678 0.317, 0.682 0.317, 0.688 0.317, 0.695 0.341, 0.700 0.341, 0.705 0.317, 0.711 0.317, 0.717 0.317, 0.722 0.325, 0.727 0.358, 0.732 0.333, 0.737 0.317, 0.744 0.309, 0.751 0.317, 0.759 0.350, 0.765 0.325, 0.775 0.309, 0.781 0.309, 0.788 0.333, 0.792 0.358, 0.797 0.325, 0.802 0.317, 0.809 0.317, 0.815 0.317, 0.822 0.341, 0.829 0.317, 0.836 0.309, 0.843 0.309, 0.852 0.341, 0.857 0.325, 0.866 0.325, 0.873 0.317, 0.882 0.325, 0.885 0.350, 0.891 0.317, 0.898 0.317, 0.908 0.325, 0.914 0.341, 0.921 0.325, 0.928 0.309, 0.933 0.309, 0.940 0.317, 0.947 0.350, 0.954 0.325, 0.960 0.317, 0.966 0.309, 0.974 0.325, 0.979 0.358, 0.983 0.317, 0.990 0.317, 0.995 0.317, 1.000 0.325, 1.000 0.610"></polygon>
            </clipPath>
        </svg>

        <LazyLoadImage
            id={styles.divider}
            src={rawDividerImage}
            alt=""
            style={{ clipPath: `url(#${styles['divider-clip-path']})` }}
        />
    </>
);

export default Divider;
